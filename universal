local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local backpack = player:WaitForChild("Backpack")

-- Tạo GUI AL
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.ResetOnSpawn = false

local alButton = Instance.new("TextButton")
alButton.Size = UDim2.new(0, 100, 0, 40)
alButton.Position = UDim2.new(1, -110, 1, -50)
alButton.AnchorPoint = Vector2.new(1, 1)
alButton.Text = "AL"
alButton.TextScaled = true
alButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
alButton.TextColor3 = Color3.new(1, 1, 1)
alButton.Parent = screenGui

-- Thông báo
local msg = Instance.new("TextLabel")
msg.Size = UDim2.new(0, 200, 0, 40)
msg.Position = UDim2.new(0.5, -100, 0.75, 0)
msg.BackgroundTransparency = 0.3
msg.BackgroundColor3 = Color3.new(0, 0, 0)
msg.TextColor3 = Color3.new(1, 1, 1)
msg.TextScaled = true
msg.Visible = false
msg.Parent = screenGui

-- Cập nhật hiển thị nút AL
local function updateAL()
	local has = backpack:FindFirstChild("Ladder") or character:FindFirstChild("Ladder")
	alButton.Visible = not has
end

-- Clone ladder nếu chưa có
alButton.MouseButton1Click:Connect(function()
	if backpack:FindFirstChild("Ladder") or character:FindFirstChild("Ladder") then
		msg.Text = "You already have a ladder."
		msg.Visible = true
		task.delay(2, function() msg.Visible = false end)
	else
		local ladder = ReplicatedStorage:FindFirstChild("Ladder")
		if ladder then ladder:Clone().Parent = backpack end
	end
end)

-- Tự động cập nhật khi có thay đổi
player.Backpack.ChildAdded:Connect(updateAL)
player.Backpack.ChildRemoved:Connect(updateAL)
character.ChildAdded:Connect(updateAL)
character.ChildRemoved:Connect(updateAL)
updateAL()

-- Preview ladder
local previewModel = nil

local function getSafePlacementCFrame()
	local root = character:FindFirstChild("HumanoidRootPart")
	if not root then return end
	local dir = root.CFrame.LookVector
	local origin = root.Position + Vector3.new(0, 2, 0)
	local ray = Ray.new(origin, dir * 5)
	local hit, pos = workspace:FindPartOnRay(ray, character)
	local offset = 3
	local final = hit and (pos - dir * offset) or (origin + dir * 5)
	return CFrame.new(final, final + root.CFrame.LookVector)
end

local function createPreview()
	if previewModel then previewModel:Destroy() end

	local model = Instance.new("Model")
	model.Name = "LadderPreview"

	local stepCount = 8
	for i = 0, stepCount do
		local step = Instance.new("Part")
		step.Size = Vector3.new(2, 0.4, 0.4)
		step.Position = Vector3.new(0, i * 1.2, 0)
		step.Anchored = true
		step.CanCollide = false
		step.Transparency = 0.6
		step.BrickColor = BrickColor.Gray()
		step.Parent = model
	end

	local sideL = Instance.new("Part")
	sideL.Size = Vector3.new(0.6, stepCount * 1.2 + 0.4, 0.4)
	sideL.Position = Vector3.new(-1.1, (stepCount * 1.2)/2, 0)
	sideL.Anchored = true
	sideL.CanCollide = false
	sideL.Transparency = 0.6
	sideL.BrickColor = BrickColor.Gray()
	sideL.Parent = model

	local sideR = sideL:Clone()
	sideR.Position = Vector3.new(1.1, sideL.Position.Y, 0)
	sideR.Parent = model

	model.Parent = workspace
	previewModel = model
end

local function updatePreview()
	if not previewModel then return end
	local cf = getSafePlacementCFrame()
	if cf then
		previewModel:SetPrimaryPartCFrame(cf)
	end
end

-- Đặt thang/cất thang
local placing = false
game:GetService("UserInputService").InputBegan:Connect(function(input, gp)
	if gp or input.KeyCode ~= Enum.KeyCode.E then return end
	local tool = backpack:FindFirstChild("Ladder") or character:FindFirstChild("Ladder")
	if not tool then return end

	if not placing then
		createPreview()
		updatePreview()
		placing = true
	else
		if previewModel then
			local placed = previewModel:Clone()
			for _, p in pairs(placed:GetDescendants()) do
				if p:IsA("Part") then
					p.Anchored = false
					p.CanCollide = true
					p.Transparency = 0
				end
			end
			placed.Name = "Ladder"
			placed.Parent = workspace
			previewModel:Destroy()
			previewModel = nil
		end
		placing = false
	end
end)

-- Luôn cập nhật vị trí preview
game:GetService("RunService").RenderStepped:Connect(function()
	if placing then updatePreview() end
end)

-- Tự lấy lại tool khi rơi xuống void
workspace.ChildAdded:Connect(function(obj)
	if obj:IsA("Tool") and obj.Name == "Ladder" then
		task.wait(2)
		if obj:IsDescendantOf(workspace) and (obj.Position.Y < -100) then
			obj:Destroy()
			local tool = ReplicatedStorage:FindFirstChild("Ladder")
			if tool then tool:Clone().Parent = backpack end
		end
	end
end)
